@model RDC.ViewModels.TaskViewModel

@{
    ViewBag.Title = "Create";
    Layout = null;
}

@using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new { onsubmit = "return postTask(this)", @id = "postTask", data_taskId = Model.Id }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "fix this errors", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id = "ckedit" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, new { @class = "form-control datepicker", placeholder = "Enter Drop-off date here...", autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger date-picker-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(Model.StatusList), "Select Status Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-default btn-outline-primary"> Create </button>
            </div>
        </div>
    </div>
}

@section scripts 
{
    <script>
        CKEDITOR.replace("")
    </script>
}